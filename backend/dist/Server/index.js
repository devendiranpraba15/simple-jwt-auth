"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _express=_interopRequireDefault(require("express"));var _dotenv=_interopRequireDefault(require("dotenv"));var _sequelize=_interopRequireDefault(require("../Utils/DbConnector/sequelize"));var _Middleware=_interopRequireDefault(require("../Middleware"));var _envConfig=require("../Utils/envConfig");_dotenv["default"].config({debug:true,path:'./src/_settings.env'});var app=(0,_express["default"])();var PORT=(0,_envConfig.getEnv)('apiServerPort');var handle404=function handle404(req,res){res.status(404).json({error:'Not Found',message:'Invalid API Endpoint'});};var handle500=function handle500(err,req,res,next){console.error('Internal Server Error:',err);res.status(500).json({error:'Internal Server Error',message:'Something went wrong'});};var initServer=function initServer(handlers){app.set('serverStarted',false);app.set('dbConnected',false);app.use(_Middleware["default"]);(0,_sequelize["default"])(function(status,msg){if(status==='SUCCESS'){app.set('dbConnected',true);}else app.set('dbConnected',false);});handlers.forEach(function(handler){app.use(handler.path,handler.router);});try{app.use(handle404);app.use(handle500);app.listen(PORT,function(){console.log('Server started on port '+PORT+'...!');});}catch(e){console.log('Error occurred while starting API server',e);}app.set('serverStarted',true);process.on('SIGINT',function(){console.log('SIGINT: Terminating API server...');process.exit(1);});app.on('close',function(){console.log('Server has closed');});return app;};var _default=exports["default"]=initServer;
//# sourceMappingURL=index.js.map