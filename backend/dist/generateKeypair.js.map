{"version":3,"file":"generateKeypair.js","names":["crypto","require","fs","genKeyPair","keyPair","generateKeyPairSync","modulusLength","publicKeyEncoding","type","format","privateKeyEncoding","writeFileSync","__dirname","publicKey","privateKey"],"sources":["../src/generateKeypair.js"],"sourcesContent":["/**\r\n * This module will generate a public and private keypair and save to current directory\r\n *\r\n * Make sure to save the private key elsewhere after generated!\r\n */\r\nconst crypto = require('crypto');\r\nconst fs = require('fs');\r\n\r\nfunction genKeyPair() {\r\n  // Generates an object where the keys are stored in properties `privateKey` and `publicKey`\r\n  const keyPair = crypto.generateKeyPairSync('rsa', {\r\n    modulusLength: 4096, // bits - standard for RSA keys\r\n    publicKeyEncoding: {\r\n      type: 'pkcs1', // \"Public Key Cryptography Standards 1\"\r\n      format: 'pem', // Most common formatting choice\r\n    },\r\n    privateKeyEncoding: {\r\n      type: 'pkcs1', // \"Public Key Cryptography Standards 1\"\r\n      format: 'pem', // Most common formatting choice\r\n    },\r\n  });\r\n\r\n  // Create the public key file\r\n  fs.writeFileSync(__dirname + '/id_rsa_pub.pem', keyPair.publicKey);\r\n\r\n  // Create the private key file\r\n  fs.writeFileSync(__dirname + '/id_rsa_priv.pem', keyPair.privateKey);\r\n}\r\n\r\n// Generate the keypair\r\ngenKeyPair();\r\n"],"mappings":"aAAA;AACA;AACA;AACA;AACA,GACA,GAAM,CAAAA,MAAM,CAAGC,OAAO,CAAC,QAAQ,CAAC,CAChC,GAAM,CAAAC,EAAE,CAAGD,OAAO,CAAC,IAAI,CAAC,CAExB,QAAS,CAAAE,UAAUA,CAAA,CAAG,CACpB;AACA,GAAM,CAAAC,OAAO,CAAGJ,MAAM,CAACK,mBAAmB,CAAC,KAAK,CAAE,CAChDC,aAAa,CAAE,IAAI,CAAE;AACrBC,iBAAiB,CAAE,CACjBC,IAAI,CAAE,OAAO,CAAE;AACfC,MAAM,CAAE,KAAO;AACjB,CAAC,CACDC,kBAAkB,CAAE,CAClBF,IAAI,CAAE,OAAO,CAAE;AACfC,MAAM,CAAE,KAAO;AACjB,CACF,CAAC,CAAC,CAEF;AACAP,EAAE,CAACS,aAAa,CAACC,SAAS,CAAG,iBAAiB,CAAER,OAAO,CAACS,SAAS,CAAC,CAElE;AACAX,EAAE,CAACS,aAAa,CAACC,SAAS,CAAG,kBAAkB,CAAER,OAAO,CAACU,UAAU,CAAC,CACtE,CAEA;AACAX,UAAU,CAAC,CAAC","ignoreList":[]}